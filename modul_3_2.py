# -*- coding: utf-8 -*-
"""03_LabellingRevisi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dh3QRnP7-780Ijft3D3Jf7nSrmUIAE0-
"""

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.tree import DecisionTreeClassifier
import pickle


def get_predict_dataset():

    tfidf_vectorizer = TfidfVectorizer()
    decision_tree = DecisionTreeClassifier()

    """# KODE UNTUK PREDIKSI DATA YANG BARU"""

    new_df = pd.read_csv('data/datasetWclusters_new.csv')

    df_data = pd.read_csv('data/resultRank_new.csv')
    print("DF DATAAA ",df_data)
    cluster_mapping = dict(df_data[['cluster', 'cluster_name']].values)

    # Later, you can load the model and vectorizer for prediction like this:
    model_file = open('data/decision_tree_model.pkl', 'rb')
    loaded_model, loaded_vectorizer = pickle.load(model_file)

    # Ekstraksi fitur dengan TF-IDF
    x_new = loaded_vectorizer.transform(new_df['komentarClean'])

    # Prediksi sentimen
    y_new_pred = loaded_model.predict(x_new)

    # Menggabungkan hasil prediksi
    new_df['prediksi_sentimen'] = y_new_pred
    new_df['cluster_name'] = new_df['cluster'].apply(lambda x: cluster_mapping.get(x, None))

    new_df.head()

    # Simpan dalam CSV
    new_df[['komentarClean', 'cluster', 'prediksi_sentimen']].to_csv('data/finalResult.csv', index=False)

    new_summary = new_df.groupby(['cluster', 'prediksi_sentimen']).size().unstack(fill_value=0).reset_index()
    print(new_summary)
    df_data = df_data.merge(new_summary[['cluster', 'negative', 'neutral', 'positive']], on='cluster', how='left')
    print(df_data)
    df_data['negative_percentage'] = round((df_data['negative']/df_data['total_count']*100), 2)

    df_data.to_csv('data/resultRank_new_new.csv', index=False)
    model_file.close()
    return True